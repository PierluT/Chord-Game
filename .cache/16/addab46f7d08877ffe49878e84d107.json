{"id":"node_modules/teoria/index.js","dependencies":[{"name":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\package.json","includedInParent":true,"mtime":1672854678203},{"name":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\package.json","includedInParent":true,"mtime":1672854677580},{"name":"./lib/note","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\index.js","resolved":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\lib\\note.js"},{"name":"./lib/interval","loc":{"line":2,"column":23,"index":57},"parent":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\index.js","resolved":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\lib\\interval.js"},{"name":"./lib/chord","loc":{"line":3,"column":20,"index":96},"parent":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\index.js","resolved":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\lib\\chord.js"},{"name":"./lib/scale","loc":{"line":4,"column":20,"index":132},"parent":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\index.js","resolved":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\lib\\scale.js"},{"name":"./lib/sugar","loc":{"line":79,"column":8,"index":2120},"parent":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\index.js","resolved":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\teoria\\lib\\sugar.js"}],"generated":{"js":"var Note = require('./lib/note');\nvar Interval = require('./lib/interval');\nvar Chord = require('./lib/chord');\nvar Scale = require('./lib/scale');\n\nvar teoria;\n\n// never thought I would write this, but: Legacy support\nfunction intervalConstructor(from, to) {\n  // Construct a Interval object from string representation\n  if (typeof from === 'string')\n    return Interval.toCoord(from);\n\n  if (typeof to === 'string' && from instanceof Note)\n    return Interval.from(from, Interval.toCoord(to));\n\n  if (to instanceof Interval && from instanceof Note)\n    return Interval.from(from, to);\n\n  if (to instanceof Note && from instanceof Note)\n    return Interval.between(from, to);\n\n  throw new Error('Invalid parameters');\n}\n\nintervalConstructor.toCoord = Interval.toCoord;\nintervalConstructor.from = Interval.from;\nintervalConstructor.between = Interval.between;\nintervalConstructor.invert = Interval.invert;\n\nfunction noteConstructor(name, duration) {\n  if (typeof name === 'string')\n    return Note.fromString(name, duration);\n  else\n    return new Note(name, duration);\n}\n\nnoteConstructor.fromString = Note.fromString;\nnoteConstructor.fromKey = Note.fromKey;\nnoteConstructor.fromFrequency = Note.fromFrequency;\nnoteConstructor.fromMIDI = Note.fromMIDI;\n\nfunction chordConstructor(name, symbol) {\n  if (typeof name === 'string') {\n    var root, octave;\n    root = name.match(/^([a-h])(x|#|bb|b?)/i);\n    if (root && root[0]) {\n      octave = typeof symbol === 'number' ? symbol.toString(10) : '4';\n      return new Chord(Note.fromString(root[0].toLowerCase() + octave),\n                            name.substr(root[0].length));\n    }\n  } else if (name instanceof Note)\n    return new Chord(name, symbol);\n\n  throw new Error('Invalid Chord. Couldn\\'t find note name');\n}\n\nfunction scaleConstructor(tonic, scale) {\n  tonic = (tonic instanceof Note) ? tonic : teoria.note(tonic);\n  return new Scale(tonic, scale);\n}\n\nteoria = {\n  note: noteConstructor,\n\n  chord: chordConstructor,\n\n  interval: intervalConstructor,\n\n  scale: scaleConstructor,\n\n  Note: Note,\n  Chord: Chord,\n  Scale: Scale,\n  Interval: Interval\n};\n\n\nrequire('./lib/sugar')(teoria);\nexports = module.exports = teoria;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/teoria/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/teoria/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}}],"sources":{"node_modules/teoria/index.js":"var Note = require('./lib/note');\nvar Interval = require('./lib/interval');\nvar Chord = require('./lib/chord');\nvar Scale = require('./lib/scale');\n\nvar teoria;\n\n// never thought I would write this, but: Legacy support\nfunction intervalConstructor(from, to) {\n  // Construct a Interval object from string representation\n  if (typeof from === 'string')\n    return Interval.toCoord(from);\n\n  if (typeof to === 'string' && from instanceof Note)\n    return Interval.from(from, Interval.toCoord(to));\n\n  if (to instanceof Interval && from instanceof Note)\n    return Interval.from(from, to);\n\n  if (to instanceof Note && from instanceof Note)\n    return Interval.between(from, to);\n\n  throw new Error('Invalid parameters');\n}\n\nintervalConstructor.toCoord = Interval.toCoord;\nintervalConstructor.from = Interval.from;\nintervalConstructor.between = Interval.between;\nintervalConstructor.invert = Interval.invert;\n\nfunction noteConstructor(name, duration) {\n  if (typeof name === 'string')\n    return Note.fromString(name, duration);\n  else\n    return new Note(name, duration);\n}\n\nnoteConstructor.fromString = Note.fromString;\nnoteConstructor.fromKey = Note.fromKey;\nnoteConstructor.fromFrequency = Note.fromFrequency;\nnoteConstructor.fromMIDI = Note.fromMIDI;\n\nfunction chordConstructor(name, symbol) {\n  if (typeof name === 'string') {\n    var root, octave;\n    root = name.match(/^([a-h])(x|#|bb|b?)/i);\n    if (root && root[0]) {\n      octave = typeof symbol === 'number' ? symbol.toString(10) : '4';\n      return new Chord(Note.fromString(root[0].toLowerCase() + octave),\n                            name.substr(root[0].length));\n    }\n  } else if (name instanceof Note)\n    return new Chord(name, symbol);\n\n  throw new Error('Invalid Chord. Couldn\\'t find note name');\n}\n\nfunction scaleConstructor(tonic, scale) {\n  tonic = (tonic instanceof Note) ? tonic : teoria.note(tonic);\n  return new Scale(tonic, scale);\n}\n\nteoria = {\n  note: noteConstructor,\n\n  chord: chordConstructor,\n\n  interval: intervalConstructor,\n\n  scale: scaleConstructor,\n\n  Note: Note,\n  Chord: Chord,\n  Scale: Scale,\n  Interval: Interval\n};\n\n\nrequire('./lib/sugar')(teoria);\nexports = module.exports = teoria;\n"},"lineCount":81}},"error":null,"hash":"b120892cce37f13789afb469dfd3be00","cacheData":{"env":{}}}