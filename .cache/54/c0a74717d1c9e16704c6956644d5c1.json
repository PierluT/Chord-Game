{"id":"node_modules/helmholtz/index.js","dependencies":[{"name":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\package.json","includedInParent":true,"mtime":1672854678203},{"name":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\helmholtz\\package.json","includedInParent":true,"mtime":1672854678055},{"name":"notecoord","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\helmholtz\\index.js","resolved":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\notecoord\\index.js"},{"name":"accidental-value","loc":{"line":2,"column":21,"index":56},"parent":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\helmholtz\\index.js","resolved":"C:\\Users\\pierl\\Desktop\\Actam\\ChordGame\\node_modules\\accidental-value\\index.js"}],"generated":{"js":"var coords = require('notecoord');\nvar accval = require('accidental-value');\n\nmodule.exports = function helmholtz(name) {\n  var name = name.replace(/\\u2032/g, \"'\").replace(/\\u0375/g, ',');\n  var parts = name.match(/^(,*)([a-h])(x|#|bb|b?)([,\\']*)$/i);\n\n  if (!parts || name !== parts[0])\n    throw new Error('Invalid formatting');\n\n  var note = parts[2];\n  var octaveFirst = parts[1];\n  var octaveLast = parts[4];\n  var lower = note === note.toLowerCase();\n  var octave;\n\n  if (octaveFirst) {\n    if (lower)\n      throw new Error('Invalid formatting - found commas before lowercase note');\n\n    octave = 2 - octaveFirst.length;\n  } else if (octaveLast) {\n    if (octaveLast.match(/^'+$/) && lower)\n      octave = 3 + octaveLast.length;\n    else if (octaveLast.match(/^,+$/) && !lower)\n      octave = 2 - octaveLast.length;\n    else\n      throw new Error('Invalid formatting - mismatch between octave ' +\n        'indicator and letter case')\n  } else\n    octave = lower ? 3 : 2;\n\n  var accidentalValue = accval.interval(parts[3].toLowerCase());\n  var coord = coords(note.toLowerCase());\n\n  coord[0] += octave;\n  coord[0] += accidentalValue[0] - coords.A4[0];\n  coord[1] += accidentalValue[1] - coords.A4[1];\n\n  return coord;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/helmholtz/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/helmholtz/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"node_modules/helmholtz/index.js":"var coords = require('notecoord');\nvar accval = require('accidental-value');\n\nmodule.exports = function helmholtz(name) {\n  var name = name.replace(/\\u2032/g, \"'\").replace(/\\u0375/g, ',');\n  var parts = name.match(/^(,*)([a-h])(x|#|bb|b?)([,\\']*)$/i);\n\n  if (!parts || name !== parts[0])\n    throw new Error('Invalid formatting');\n\n  var note = parts[2];\n  var octaveFirst = parts[1];\n  var octaveLast = parts[4];\n  var lower = note === note.toLowerCase();\n  var octave;\n\n  if (octaveFirst) {\n    if (lower)\n      throw new Error('Invalid formatting - found commas before lowercase note');\n\n    octave = 2 - octaveFirst.length;\n  } else if (octaveLast) {\n    if (octaveLast.match(/^'+$/) && lower)\n      octave = 3 + octaveLast.length;\n    else if (octaveLast.match(/^,+$/) && !lower)\n      octave = 2 - octaveLast.length;\n    else\n      throw new Error('Invalid formatting - mismatch between octave ' +\n        'indicator and letter case')\n  } else\n    octave = lower ? 3 : 2;\n\n  var accidentalValue = accval.interval(parts[3].toLowerCase());\n  var coord = coords(note.toLowerCase());\n\n  coord[0] += octave;\n  coord[0] += accidentalValue[0] - coords.A4[0];\n  coord[1] += accidentalValue[1] - coords.A4[1];\n\n  return coord;\n};\n"},"lineCount":42}},"error":null,"hash":"52a910df1d81c6adf4f0aa2cc7f58912","cacheData":{"env":{}}}